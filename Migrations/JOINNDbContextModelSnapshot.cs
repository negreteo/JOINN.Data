// <auto-generated />
using System;
using JOINN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JOINN.Data.Migrations
{
    [DbContext(typeof(JOINNDbContext))]
    partial class JOINNDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JOINN.Data.Models.ApprovalDecision", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("ApprovalDecision")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ApprovalDecisions");
                });

            modelBuilder.Entity("JOINN.Data.Models.ApprovalStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("ApprovalStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ApprovalStatus");
                });

            modelBuilder.Entity("JOINN.Data.Models.BenefitType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("BenefitType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("BenefitTypes");
                });

            modelBuilder.Entity("JOINN.Data.Models.BenefitUnit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("BenefitUnit")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("BenefitUnits");
                });

            modelBuilder.Entity("JOINN.Data.Models.CostCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("CostCategory")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("CostCategories");
                });

            modelBuilder.Entity("JOINN.Data.Models.FinalDecision", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("FinalDecision")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("FinalDecisions");
                });

            modelBuilder.Entity("JOINN.Data.Models.IBPML1", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .HasColumnName("IBPML1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("IBPML1");
                });

            modelBuilder.Entity("JOINN.Data.Models.IBPML2", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("IBPML1_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .HasColumnName("IBPML2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("IBPML1_ID");

                    b.ToTable("IBPML2");
                });

            modelBuilder.Entity("JOINN.Data.Models.IBPML3", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("IBPML2_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .HasColumnName("IBPML3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("IBPML2_ID");

                    b.ToTable("IBPML3");
                });

            modelBuilder.Entity("JOINN.Data.Models.ITGuideline", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("ITGuideline")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ITGuidelines");
                });

            modelBuilder.Entity("JOINN.Data.Models.Location", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("Location")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("JOINN.Data.Models.MedicalValidation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("MedicalValidation")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MedicalValidations");
                });

            modelBuilder.Entity("JOINN.Data.Models.ProjectFunction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("ProjectFunction")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ProjectFunctions");
                });

            modelBuilder.Entity("JOINN.Data.Models.ProjectStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("ProjectStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ProjectStatus");
                });

            modelBuilder.Entity("JOINN.Data.Models.ProjectType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("ProjectType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ProjectTypes");
                });

            modelBuilder.Entity("JOINN.Data.Models.Region", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("Region")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("JOINN.Data.Models.SMEApproval", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FunctionalSME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FunctionalSMEComments")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReviewedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SMEApprovalStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("SMEAreaID")
                        .HasColumnType("int");

                    b.Property<int?>("Solution_ID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("SMEApprovalStatusID");

                    b.HasIndex("SMEAreaID");

                    b.HasIndex("Solution_ID");

                    b.ToTable("SMEApprovals");
                });

            modelBuilder.Entity("JOINN.Data.Models.SMEArea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("SMEAreas");
                });

            modelBuilder.Entity("JOINN.Data.Models.Site", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("Site")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RegionID")
                        .HasColumnType("int");

                    b.Property<string>("SiteShort")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("RegionID");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("JOINN.Data.Models.SolutionFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzureBlobFileID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AzureBlobFileLink")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("AzureBlobFileName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsPackageFile")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Solution_ID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("Solution_ID");

                    b.ToTable("SolutionFiles");
                });

            modelBuilder.Entity("JOINN.Data.Models.SolutionStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("SolutionStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("SolutionStatus");
                });

            modelBuilder.Entity("JOINN.Data.Models.SolutionType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("SolutionType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("SolutionTypes");
                });

            modelBuilder.Entity("JOINN.Data.Models.SubWorkStream", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("SubWorkStream")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("SubWorkStreams");
                });

            modelBuilder.Entity("JOINN.Data.Models.VPApproval", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsApprovalExceptions")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Solution_ID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("VPApprovalStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VPApprovalSubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VPApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VPAreaID")
                        .HasColumnType("int");

                    b.Property<string>("VPComments")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("ID");

                    b.HasIndex("Solution_ID");

                    b.HasIndex("VPApprovalStatusID");

                    b.HasIndex("VPAreaID");

                    b.ToTable("VPApprovals");
                });

            modelBuilder.Entity("JOINN.Data.Models.VPApprovalStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("VPApprovalStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("VPApprovalStatus");
                });

            modelBuilder.Entity("JOINN.Data.Models.VPArea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VPName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("VPAreas");
                });

            modelBuilder.Entity("JOINN.Data.Solution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AttendedAllRegions")
                        .HasColumnType("bit");

                    b.Property<string>("BenefitComments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("BenefitTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("BenefitUnitID")
                        .HasColumnType("int");

                    b.Property<string>("BenefitValue")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CostCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("FinalDecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinalDecisionID")
                        .HasColumnType("int");

                    b.Property<string>("FunctionRemarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("HasDocumentation")
                        .HasColumnType("bit");

                    b.Property<int?>("IBPML1_ID")
                        .HasColumnType("int");

                    b.Property<int?>("IBPML2_ID")
                        .HasColumnType("int");

                    b.Property<int?>("IBPML3_ID")
                        .HasColumnType("int");

                    b.Property<int>("ITGuideLineID")
                        .HasColumnType("int");

                    b.Property<int>("InCMDB")
                        .HasColumnType("int");

                    b.Property<decimal>("InvestmentCost")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("IsPackageReady")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalValidationID")
                        .HasColumnType("int");

                    b.Property<string>("ProcessOwner")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductOwner")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjectFunctionID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectType_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("RealizedAnnualSavings")
                        .HasColumnType("decimal(19,4)");

                    b.Property<int?>("RegionID")
                        .HasColumnType("int");

                    b.Property<string>("SimilarApp")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SolutionStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("SubWorkStreamID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TryingToSolve")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("ID");

                    b.HasIndex("BenefitTypeID");

                    b.HasIndex("BenefitUnitID");

                    b.HasIndex("CostCategoryID");

                    b.HasIndex("FinalDecisionID");

                    b.HasIndex("IBPML1_ID");

                    b.HasIndex("IBPML2_ID");

                    b.HasIndex("IBPML3_ID");

                    b.HasIndex("LocationID");

                    b.HasIndex("MedicalValidationID");

                    b.HasIndex("ProjectFunctionID");

                    b.HasIndex("ProjectStatusID");

                    b.HasIndex("ProjectType_ID");

                    b.HasIndex("RegionID");

                    b.HasIndex("SolutionStatusID");

                    b.HasIndex("SubWorkStreamID");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("JOINN.Data.Models.IBPML2", b =>
                {
                    b.HasOne("JOINN.Data.Models.IBPML1", "IBPML1")
                        .WithMany()
                        .HasForeignKey("IBPML1_ID");
                });

            modelBuilder.Entity("JOINN.Data.Models.IBPML3", b =>
                {
                    b.HasOne("JOINN.Data.Models.IBPML2", "IBPML2")
                        .WithMany()
                        .HasForeignKey("IBPML2_ID");
                });

            modelBuilder.Entity("JOINN.Data.Models.SMEApproval", b =>
                {
                    b.HasOne("JOINN.Data.Models.ApprovalStatus", "ApprovalStatus")
                        .WithMany()
                        .HasForeignKey("SMEApprovalStatusID");

                    b.HasOne("JOINN.Data.Models.SMEArea", "Area")
                        .WithMany()
                        .HasForeignKey("SMEAreaID");

                    b.HasOne("JOINN.Data.Solution", "Solution")
                        .WithMany()
                        .HasForeignKey("Solution_ID");
                });

            modelBuilder.Entity("JOINN.Data.Models.Site", b =>
                {
                    b.HasOne("JOINN.Data.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionID");
                });

            modelBuilder.Entity("JOINN.Data.Models.SolutionFile", b =>
                {
                    b.HasOne("JOINN.Data.Solution", "Solution")
                        .WithMany()
                        .HasForeignKey("Solution_ID");
                });

            modelBuilder.Entity("JOINN.Data.Models.VPApproval", b =>
                {
                    b.HasOne("JOINN.Data.Solution", "Solution")
                        .WithMany()
                        .HasForeignKey("Solution_ID");

                    b.HasOne("JOINN.Data.Models.VPApprovalStatus", "VPApprovalStatus")
                        .WithMany()
                        .HasForeignKey("VPApprovalStatusID");

                    b.HasOne("JOINN.Data.Models.VPArea", "Area")
                        .WithMany()
                        .HasForeignKey("VPAreaID");
                });

            modelBuilder.Entity("JOINN.Data.Solution", b =>
                {
                    b.HasOne("JOINN.Data.Models.BenefitType", "BenefitType")
                        .WithMany()
                        .HasForeignKey("BenefitTypeID");

                    b.HasOne("JOINN.Data.Models.BenefitUnit", "BenefitUnit")
                        .WithMany()
                        .HasForeignKey("BenefitUnitID");

                    b.HasOne("JOINN.Data.Models.CostCategory", "CostCategory")
                        .WithMany()
                        .HasForeignKey("CostCategoryID");

                    b.HasOne("JOINN.Data.Models.FinalDecision", "FinalDecision")
                        .WithMany()
                        .HasForeignKey("FinalDecisionID");

                    b.HasOne("JOINN.Data.Models.IBPML1", "IBPML1")
                        .WithMany()
                        .HasForeignKey("IBPML1_ID");

                    b.HasOne("JOINN.Data.Models.IBPML2", "IBPML2")
                        .WithMany()
                        .HasForeignKey("IBPML2_ID");

                    b.HasOne("JOINN.Data.Models.IBPML3", "IBPML3")
                        .WithMany()
                        .HasForeignKey("IBPML3_ID");

                    b.HasOne("JOINN.Data.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID");

                    b.HasOne("JOINN.Data.Models.MedicalValidation", "MedicalValidation")
                        .WithMany()
                        .HasForeignKey("MedicalValidationID");

                    b.HasOne("JOINN.Data.Models.ProjectFunction", "ProjectFunction")
                        .WithMany()
                        .HasForeignKey("ProjectFunctionID");

                    b.HasOne("JOINN.Data.Models.ProjectStatus", "ProjectStatus")
                        .WithMany()
                        .HasForeignKey("ProjectStatusID");

                    b.HasOne("JOINN.Data.Models.ProjectType", "ProjectType")
                        .WithMany()
                        .HasForeignKey("ProjectType_ID");

                    b.HasOne("JOINN.Data.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionID");

                    b.HasOne("JOINN.Data.Models.SolutionStatus", "SolutionStatus")
                        .WithMany()
                        .HasForeignKey("SolutionStatusID");

                    b.HasOne("JOINN.Data.Models.SubWorkStream", "SubWorkStream")
                        .WithMany()
                        .HasForeignKey("SubWorkStreamID");
                });
#pragma warning restore 612, 618
        }
    }
}
